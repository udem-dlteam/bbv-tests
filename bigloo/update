#! /bin/bash

# File: "update"

# Usage: ./update

# find script directory
SCRIPT_DIR="$0"
if test "${SCRIPT_DIR#/}" = "$SCRIPT_DIR" ; then
  SCRIPT_DIR="$(pwd)/$SCRIPT_DIR"
fi
SCRIPT_DIR="${SCRIPT_DIR%/*}"
SCRIPT_DIR="${SCRIPT_DIR%/.}"

get_available_parallelism()
{
  # This works on linux:
  AVAILABLE_PARALLELISM="`nproc 2> /dev/null`"

  if [ "$AVAILABLE_PARALLELISM" == "" ] ; then

    # This works on macOS:
    AVAILABLE_PARALLELISM="`sysctl -n hw.ncpu 2> /dev/null`"

    if [ "$AVAILABLE_PARALLELISM" == "" ] ; then
      # Just assume we have one processing unit
      AVAILABLE_PARALLELISM="1"
    fi

  fi
}

get_available_parallelism

MAKE_JOBS="-j$AVAILABLE_PARALLELISM"

BIGLOOREPODIR="$SCRIPT_DIR/bigloo"
BIGLOOINSTDIR="$SCRIPT_DIR/local"
BIGLOOGIT=git@github.com:manuel-serrano/bigloo.git

if test ! -d "$BIGLOOREPODIR" ; then

  echo "========== cloning Bigloo to $BIGLOOREPODIR"

  git clone $BIGLOOGIT "$BIGLOOREPODIR"

fi

cd "$BIGLOOREPODIR"

if test ! -e config.status ; then

  echo "========== configuring Bigloo"

  ./configure --prefix="$BIGLOOINSTDIR"

  echo "========== building Bigloo"

  make "$MAKE_JOBS" && make -C tools bglcfg
  
  echo "========== installing Bigloo"

  make install

fi

git pull > pull.out

cat pull.out

if grep -q -v 'Already up-to-date.' pull.out > /dev/null ; then

  echo "========== building Bigloo with recent changes"

  make "$MAKE_JOBS"

  echo "========== installing Bigloo"

  make install > /dev/null 2>&1

fi

rm -f pull.out

echo "========== Bigloo is up to date"
